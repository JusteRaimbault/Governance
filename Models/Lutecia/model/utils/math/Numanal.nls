
;;
; numerical analysis


to-report numanal:get-brent-root [function left-bound right-bound tol]
        let sqrt_dbl_epsilon sqrt (2 ^ -1022)
        let max_steps 1000
        let a left-bound
        let b right-bound

        let fa eval-fun function a
        let fb eval-fun function b
        
        if (fa > 0.0 and fb > 0.0) or (fa < 0.0 and fb < 0.0) [error "no root"]
        
        let c b let fc fb let d (b - a) let ee d
        
        repeat max_steps [
            if (fb > 0.0 and fc > 0.0) or (fb < 0.0 and fc < 0.0) [ set c a set fc fa set d (b - a) set ee d]
            if abs fc < abs fb [set a b set fa fb set b c set fb fc set c a set fc fa]
            
            
            let tol1 sqrt_dbl_epsilon + abs b * tol
            let xmid 0.5 * (c - b)
            if (abs xmid <= tol1 or fb = 0) [report b]
            
            ifelse (abs ee >= tol1) [
                let s fb / fa
                let p 0 let q 0
                ifelse (a = c) [
                    set p 2.0 * xmid * s
                    set q 1.0 - s
                ][
                    set q fa / fc
                    let r fb / fc
                    set p (s * (2.0 * xmid * q * (q - r) - (b - a) * (r - 1.0)))
                    set q ((q - 1.0) * (r - 1.0) * (s - 1.0))
                ]
                if (p > 0.0) [set q (- q)]
                set p abs p
                let min1 3.0 * xmid * q - abs (tol1 * q)
                let min2 abs (ee * q);
                ifelse (2.0 * p < min (list min1 min2)) [ set ee d set d p / q ][set d xmid set ee d]
            ][
                set d xmid
                set ee d
            ]
            
            set a b
            set fa fb
            let incr 0
            ifelse abs d > tol1 [set incr d][ifelse xmid < 0 [set incr ( - tol1)][set incr tol1]]
            set b (b + incr)
            set fb eval-fun function b
        ]
  
        error "brent-root : max-iters reached"
end

to-report test-fun [x]
  report 2 * x + 1
end

to test-brent-root
  show numanal:get-brent-root "test-fun" -1 1 0.01
end

to-report eval-fun [function-name x]
  report runresult (word function-name " " x)
end
