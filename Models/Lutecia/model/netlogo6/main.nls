
;;;;;;;;;;;;;;;;
;; main.nls
;;;;;;;;;;;;;;;;



to main:go
  
  if main:stopping-condition? [indicators:compute-indicators stop]
  
  ;; transportation : flux and congestion in nw
  ;;
  transportation:transportation
  
  ;; luti : accessibilities and relocation
  ; includes congestion -> do note forget to update the matrix after congestion computation
  luti:luti
  
  ;; network evolution
  governance:governance
  
  ;; indicators
  indicators:update-indicators
  
  ;; display
  display:update-display
  
  tick
end




to-report main:stopping-condition?
   if global:stopping-type = "time" [let cond (ticks >= global:total-time-steps) if cond = true [output-print (word "Stopping : reached " global:total-time-steps " time steps" )] report cond]
   if global:stopping-type = "infrastructure-stock" [let cond ((sum [link-length] of transportation-links) > global:total-infrastructure-stock) if cond = true [output-print (word "Stopping : reached " global:total-infrastructure-stock " infra length built" )] report cond]
end